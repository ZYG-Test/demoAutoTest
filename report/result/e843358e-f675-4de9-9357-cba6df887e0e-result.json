{"name": "Info_1个人信息", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <testcase.test_excel_case.TestExcel object at 0x00000253351EEB48>\ncase = {'cookies': '', 'headers': '', 'status_code': 401.0, '前置条件': '', ...}\n\n    @pytest.mark.parametrize(\"case\",run_list)\n    # 2、修改方法参数\n    def test_run(self,case):\n        # 3、重构函数内容\n        #data_key = ExcelConfig.DataConfig\n        # run_list第1个用例，用例，key获取values\n        url = ConfigYaml().get_conf_url()+case[data_key.url]\n        print(url)\n        case_id = case[data_key.case_id]\n        case_model = case[data_key.case_model]\n        case_name = case[data_key.case_name]\n        pre_exec = case[data_key.pre_exec]\n        method = case[data_key.method]\n        params_type = case[data_key.params_type]\n        params = case[data_key.params]\n        expect_result = case[data_key.expect_result]\n        headers = case[data_key.headers]\n        cookies =case[data_key.cookies]\n        code = case[data_key.code]\n        db_verify = case[data_key.db_verify]\n    \n    \n    \n        # 1、验证前置条件\n        if pre_exec:\n            pass\n        # 2、找到执行用例\n            # 前置测试用例\n            pre_case = data_init.get_case_pre(pre_exec)\n            print(\"前置条件信息为：%s\"%pre_case)\n            pre_res = self.run_pre(pre_case)\n            headers,cookies = self.get_correlation(headers,cookies,pre_res)\n    \n        header = Base.json_parse(headers)\n        cookie = Base.json_parse(cookies)\n        res = self.run_api(url, method, params, header,cookie)\n        print(\"测试用例执行：%s\" % res)\n    \n        #allure\n        #sheet名称  feature 一级标签\n        allure.dynamic.feature(sheet_name)\n        #模块   story 二级标签\n        allure.dynamic.story(case_model)\n        #用例ID+接口名称  title\n        allure.dynamic.title(case_id+case_name)\n        #请求URL  请求类型 期望结果 实际结果描述\n        desc = \"<font color='red'>请求URL: </font> {}<Br/>\" \\\n               \"<font color='red'>请求类型: </font>{}<Br/>\" \\\n               \"<font color='red'>期望结果: </font>{}<Br/>\" \\\n               \"<font color='red'>实际结果: </font>{}\".format(url,method,expect_result,res)\n        allure.dynamic.description(desc)\n    \n        #断言验证\n        #状态码，返回结果内容，数据库相关的结果的验证\n        #状态码\n        assert_util = AssertUtil()\n        assert_util.assert_code(int(res[\"code\"]),int(code))\n        #返回结果内容\n>       assert_util.assert_in_body(str(res[\"body\"]),str(expect_result))\n\ntestcase\\test_excel_case.py:142: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <utils.AssertUtil.AssertUtil object at 0x00000253351E8A88>\nbody = '\"{\\'detail\\': \\'\\\\u8eab\\\\u4efd\\\\u8ba4\\\\u8bc1\\\\u4fe1\\\\u606f\\\\u672a\\\\u63d0\\\\u4f9b\\\\u3002\\'}\"'\nexpected_body = '身份认证信息未提供'\n\n    def assert_in_body(self,body,expected_body):\n        \"\"\"\n        验证返回结果是否包含期望的结果\n        :param body:\n        :param expected_body:\n        :return:\n        \"\"\"\n        try:\n            body = json.dumps(body)\n            print(body)\n>           assert expected_body in body\nE           AssertionError\n\nutils\\AssertUtil.py:48: AssertionError"}, "description": "<font color='red'>请求URL: </font> http://211.103.136.242:8064/user/<Br/><font color='red'>请求类型: </font>get<Br/><font color='red'>期望结果: </font>身份认证信息未提供<Br/><font color='red'>实际结果: </font>{'code': 401, 'body': {'detail': '身份认证信息未提供。'}}", "attachments": [{"name": "log", "source": "8d19b854-eacd-49ef-8d09-b107bc97760a-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "case", "value": "{'用例ID': 'Info_1', '模块': '个人信息', '接口名称': '个人信息', '请求URL': '/user/', '前置条件': '', '请求类型': 'get', '请求参数类型': '', '请求参数': '', '预期结果': '身份认证信息未提供', '实际结果': '', '备注': '', '是否运行': 'y', 'headers': '', 'cookies': '', 'status_code': 401.0, '数据库验证': ''}"}], "start": 1586788890876, "stop": 1586788891046, "uuid": "957c355b-64e7-48d1-8634-c74b9bd161ff", "historyId": "e214938b966deaff675d373e2eea5101", "testCaseId": "dd2521432c4340b625f0f9387327dd8f", "fullName": "testcase.test_excel_case.TestExcel#test_run", "labels": [{"name": "feature", "value": "美多商城接口测试"}, {"name": "story", "value": "个人信息"}, {"name": "parentSuite", "value": "testcase"}, {"name": "suite", "value": "test_excel_case"}, {"name": "subSuite", "value": "TestExcel"}, {"name": "host", "value": "LAPTOP-8FSK7C3Q"}, {"name": "thread", "value": "5588-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.test_excel_case"}]}